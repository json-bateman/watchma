package steps 

import (
	"github.com/starfederation/datastar-go/datastar"
	"watchma/pkg/services"
	"watchma/pkg/types"
	"watchma/view/common"
)

templ Draft(player *services.Player, movies []types.Movie, baseUrl string, room *services.Room) {
	{{
		showSelectedMovies := len(player.DraftMovies) > 0
	}}
	<div id="moviesRoom" data-signals={ "{search:'', sort:'', genre:''}" }>
		<div class="w-full flex-wrap gap-4 flex justify-between items-center">
			<section class="flex gap-4 flex-wrap">
				@search(room)
				<div class="flex gap-4">
					@filters(room)
				</div>
			</section>
			<section>
				@submit(player, room)
				@common.Error("")
			</section>
		</div>
		if showSelectedMovies {
			<section class="mt-4">
				@selectedMovies(movies, player.DraftMovies, room)
			</section>
		}
		<section class="mt-4">
			@DraftGrid(movies, player.DraftMovies, baseUrl, room)
		</section>
	</div>
}

templ search(room *services.Room) {
	<input
		class="input"
		aria-label="Search movies"
		placeholder="Search..."
		aria-placeholder="Search..."
		data-bind:search
		data-on:input__debounce.500ms={ datastar.PostSSE("/draft/%s/query", room.Name) }
	/>
}

templ filters(room *services.Room) {
	<select
		data-bind:genre
		class="select"
		aria-label="Filter movies by genre"
		data-on:change={ datastar.PostSSE("/draft/%s/query", room.Name) }
	>
		<option value="" selected>All genres&emsp;</option>
		<option value="Action">Action</option>
		<option value="Adventure">Adventure</option>
		<option value="Animation">Animation</option>
		<option value="Comedy">Comedy</option>
		<option value="Crime">Crime</option>
		<option value="Documentary">Documentary</option>
		<option value="Drama">Drama</option>
		<option value="Family">Family</option>
		<option value="Fantasy">Fantasy</option>
		<option value="History">History</option>
		<option value="Horror">Horror</option>
		<option value="Music">Music</option>
		<option value="Mystery">Mystery</option>
		<option value="Romance">Romance</option>
		<option value="Science Fiction">Science Fiction</option>
		<option value="Thriller">Thriller</option>
		<option value="TV Movie">TV Movie</option>
		<option value="War">War</option>
		<option value="Western">Western</option>
	</select>
	<select
		class="select"
		aria-label="Sort movies"
		data-bind:sort
		data-on:change={ datastar.PostSSE("/draft/%s/query", room.Name) }
	>
		<option value="" selected>No sort</option>
		<option value="name-asc">Name Ascending</option>
		<option value="name-desc">Name Descending</option>
		<option value="year-asc">Year Ascending</option>
		<option value="year-desc">Year Descending</option>
		<option value="critic-asc">Critic Rating Ascending</option>
		<option value="critic-desc">Critic Rating Descending</option>
		<option value="community-asc">Community Rating Ascending</option>
		<option value="community-desc">Community Rating Descending</option>
	</select>
}

templ submit(player *services.Player, room *services.Room) {
	{{
		selectedCount := len(player.DraftMovies)
		disabled := selectedCount == 0
	}}
	<div class="flex flex-wrap items-center gap-2">
		<span>Selected { selectedCount } of { room.Game.MaxDraftCount } movies</span>
		<button
			id="draftSubmit"
			if disabled {
				class="btn-disabled"
				disabled
				aria-disabled
			} else {
				class="btn"
				data-on:click={ datastar.PostSSE("/draft/%s/submit", room.Name) }
			}
		>Submit</button>
	</div>
}

templ DraftSubmit() {
	<button type="button" id="draftSubmit" class="btn-success cursor-not-allowed">Movies Submitted!</button>
}

templ selectedMovies(movies []types.Movie, selectedMovieIds []string, room *services.Room) {
	{{
		selectedMovies := []types.Movie{}
		for _, movieId := range selectedMovieIds {
			for _, movie := range movies {
				if movie.Id == movieId {
					selectedMovies = append(selectedMovies, movie)
					break
				}
			}
		}
	}}
	<div class="flex flex-wrap gap-2">
		for _, movie := range selectedMovies {
			<div class="inline-flex items-center pl-3 py-1 bg-primary tracking-wide text-sm text-text">
				{ movie.Name }
				<button
					type="button"
					class="pl-2 pr-3 cursor-pointer"
					data-on:click={ datastar.DeleteSSE("/draft/%s/%s", room.Name, movie.Id) }
				>
					<svg class="w-3 h-3" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
						<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
					</svg>
					<span class="sr-only">Remove tag</span>
				</button>
			</div>
		}
	</div>
}

templ DraftGrid(movies []types.Movie, selectedMovies []string, baseUrl string, room *services.Room) {
	{{
	gridOptions := common.DefaultGridOptions()
	gridOptions.Selectable = true
	gridOptions.MakeOnClickMovie = func(movieId string) string {
		return datastar.PatchSSE("/draft/%s/%s", room.Name, movieId)
	}
	}}
	@common.MovieGrid(movies, selectedMovies, baseUrl, gridOptions)
}
